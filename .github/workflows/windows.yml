name: win32

on:
  pull_request:
  push:
  release:
    types: published

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        buildtype: [Debug, Release]
        features: [ON, OFF]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install Dependencies
      run: |
        choco install imagemagick.app

    - name: Build Vanilla Conquer
      run: |
        cmake -A Win32 -DBUILD_TESTS=ON -DDSOUND=${{ matrix.features }} -DDDRAW=${{ matrix.features }} -DUSE_ASM=${{ matrix.features }} -DNETWORKING=${{ matrix.features }} -DMAP_EDITORRA=${{ matrix.features }} -DMAP_EDITORTD=${{ matrix.features }} -B build
        cmake --build build --parallel --config ${{ matrix.buildtype }}

    - name: Run unit tests
      run: |
        cd build
        ctest -C ${{ matrix.buildType }}

    - name: Create archives
      shell: bash
      run: |
        mkdir artifact
        export ZIPNAME=vanillaconquer_win32_${{ matrix.buildtype }}
        if [ ${{ matrix.features }} != "ON" ]; then export FEATURES=_full; fi
        7z a artifact/$ZIPNAME$FEATURES.zip ./build/${{ matrix.buildtype }}/vanillara.exe ./build/${{ matrix.buildtype }}/vanillatd.exe ./build/${{ matrix.buildtype }}/RedAlert.dll ./build/${{ matrix.buildtype }}/TiberianDawn.dll
  
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: vanilla_conquer
        path: artifact

  sdl2:
    runs-on: windows-2019
    strategy:
      matrix:
        buildtype: [Debug, Release]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install Dependencies
      run: |
        choco install imagemagick.app
        Invoke-WebRequest -Uri https://www.libsdl.org/release/SDL2-devel-2.0.12-VC.zip -OutFile $Env:TEMP\SDL2-devel.zip
        Expand-Archive $Env:TEMP\SDL2-devel.zip -DestinationPath $Env:TEMP

    - name: Build VanillaTD and remaster dlls
      run: |
        cmake -A Win32 -DSDL2=ON "-DSDL2_ROOT_DIR=$($Env:TEMP)\SDL2-2.0.12" -B build
        cmake --build build --target VanillaTD --target TiberianDawn --target RedAlert --parallel --config ${{ matrix.buildtype }}

    - name: Create archives
      shell: bash
      run: |
        mkdir artifact
        export ZIPNAME=vanillaconquer_win32_sdl2_${{ matrix.buildtype }}
        7z a artifact/$ZIPNAME.zip ./build/${{ matrix.buildtype }}/vanillatd.exe ./build/${{ matrix.buildtype }}/RedAlert.dll ./build/${{ matrix.buildtype }}/TiberianDawn.dll

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: vanilla_conquer
        path: artifact
